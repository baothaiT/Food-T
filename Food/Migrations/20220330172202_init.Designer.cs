// <auto-generated />
using System;
using Food.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Food.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220330172202_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Food.Entity.About", b =>
                {
                    b.Property<int>("about_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("about_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("about_Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("about_id");

                    b.ToTable("About");

                    b.HasData(
                        new
                        {
                            about_id = 1,
                            about_Description = "The Big Oxmox advised her not to do so, because there were thousands of bad Commas, wild Question Marks and devious Semikoli, but the Little Blind Text didn’t listen. She packed her seven versalia, put her initial into the belt and made herself on the way. \n \n When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrove,the headline of Alphabet Village and the subline of her own road,the Line Lane.Pityful a rethoric question ran over her cheek,then she continued her way.",
                            about_Title = "Footwear the leading eCommerce Store around the Globe",
                            about_Url = "https://www.youtube.com/watch?v=F1vcruph8JA"
                        });
                });

            modelBuilder.Entity("Food.Entity.Bills", b =>
                {
                    b.Property<string>("bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_Cancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_Confirmation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("bill_DatetimeOrder")
                        .HasColumnType("datetime2");

                    b.Property<bool>("bill_Delivered")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_Delivering")
                        .HasColumnType("bit");

                    b.Property<int>("bill_Discount")
                        .HasColumnType("int");

                    b.Property<bool>("bill_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("bill_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bill_PaidTotal")
                        .HasColumnType("int");

                    b.Property<string>("bill_PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductColorlist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductIdlist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductNamelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductPricelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_ProductSizelist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bill_Shipping")
                        .HasColumnType("int");

                    b.Property<string>("bill_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_WaitForConfirmation")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_WaitPickup")
                        .HasColumnType("bit");

                    b.HasKey("bill_Id");

                    b.HasIndex("bill_UserId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            bill_Id = "D269BF93-A5E2-4C4A-8146-9967DDE80D30",
                            bill_Cancelled = false,
                            bill_Confirmation = true,
                            bill_DatetimeOrder = new DateTime(2022, 3, 31, 0, 22, 2, 242, DateTimeKind.Local).AddTicks(7848),
                            bill_Delivered = false,
                            bill_Delivering = false,
                            bill_Discount = 0,
                            bill_HideStatus = false,
                            bill_Note = "",
                            bill_PaidTotal = 2000,
                            bill_PaymentMethod = "Check Payment",
                            bill_ProductColorlist = "Blue|Red|Black|Green|",
                            bill_ProductIdlist = "1|2|3|4",
                            bill_ProductNamelist = "product 1|product 2| product 3| product 4|",
                            bill_ProductPricelist = "550|450|350|640|",
                            bill_ProductSizelist = "7|8|9|14|",
                            bill_Quantity = "1|1|2|1|",
                            bill_Shipping = 10,
                            bill_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            bill_WaitForConfirmation = false,
                            bill_WaitPickup = false
                        });
                });

            modelBuilder.Entity("Food.Entity.Cart", b =>
                {
                    b.Property<string>("cart_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cart_UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cart_Id");

                    b.HasIndex("cart_UserID");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            cart_Id = "72309286-ECBB-4D20-AD95-2819D31E3400",
                            cart_UserID = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff"
                        },
                        new
                        {
                            cart_Id = "D355458F-1DD3-4834-AA28-6DA34B6357FF",
                            cart_UserID = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        });
                });

            modelBuilder.Entity("Food.Entity.CartsDevice", b =>
                {
                    b.Property<string>("cartd_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cartd_DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cartd_Id");

                    b.HasIndex("cartd_DeviceId");

                    b.ToTable("CartsDevice");
                });

            modelBuilder.Entity("Food.Entity.Categories", b =>
                {
                    b.Property<string>("cg_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cg_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cg_Sale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cg_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cg_Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            cg_Id = "8c1b99bf-2734-449f-bc94-0fc2337dae74",
                            cg_Name = "Dry food",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "1a083464-aede-43ac-a40c-ea3386677a60",
                            cg_Name = "Food",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "5ca2c387-ea0e-404e-8563-a633d3f04c59",
                            cg_Name = "Drink",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "7b7851ec-8969-4cfe-9740-68eb0cb8fb79",
                            cg_Name = "Banhmi",
                            cg_Sale = "",
                            cg_Type = ""
                        },
                        new
                        {
                            cg_Id = "193f1d0d-d521-4ee5-a06a-0ac22e26e391",
                            cg_Name = "Snack",
                            cg_Sale = "",
                            cg_Type = ""
                        });
                });

            modelBuilder.Entity("Food.Entity.ContactSystem", b =>
                {
                    b.Property<int>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contact_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Contact_Id");

                    b.ToTable("ContactSystems");
                });

            modelBuilder.Entity("Food.Entity.ContactUsers", b =>
                {
                    b.Property<string>("cu_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("cu_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cu_Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cu_Id");

                    b.ToTable("ContactUsers");

                    b.HasData(
                        new
                        {
                            cu_Id = "fc30046d-e5cf-4c51-9df1-9a77eaaf885e",
                            cu_Description = "Description",
                            cu_Email = "Email",
                            cu_FirstName = "FirstName",
                            cu_LastName = "LastName",
                            cu_Subject = "Subject"
                        });
                });

            modelBuilder.Entity("Food.Entity.Coupons", b =>
                {
                    b.Property<string>("couponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("couponCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("couponPrice")
                        .HasColumnType("int");

                    b.HasKey("couponId");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            couponId = "3c8f1ed1-05bc-4605-8c74-5e0a2013dc62",
                            couponCode = "code10",
                            couponPrice = 10
                        },
                        new
                        {
                            couponId = "08025226-526b-405b-a7d9-deabbf213ec1",
                            couponCode = "code50",
                            couponPrice = 50
                        });
                });

            modelBuilder.Entity("Food.Entity.Device", b =>
                {
                    b.Property<string>("deviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("deviceAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("devicePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("devicePostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deviceState")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Food.Entity.ProductInCart", b =>
                {
                    b.Property<string>("pic_CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pic_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("pic_amount")
                        .HasColumnType("int");

                    b.Property<string>("pic_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pic_size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pic_CartId", "pic_ProductId");

                    b.HasIndex("pic_ProductId");

                    b.ToTable("ProductInCart");
                });

            modelBuilder.Entity("Food.Entity.ProductInCartDevices", b =>
                {
                    b.Property<string>("picd_CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("picd_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("picd_amount")
                        .HasColumnType("int");

                    b.Property<string>("picd_color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picd_size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("picd_CartId", "picd_ProductId");

                    b.HasIndex("picd_ProductId");

                    b.ToTable("ProductInCartDevices");
                });

            modelBuilder.Entity("Food.Entity.Products", b =>
                {
                    b.Property<string>("pd_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pd_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Img4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pd_NameImg4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pd_Price")
                        .HasColumnType("int");

                    b.Property<int>("pd_Rate")
                        .HasColumnType("int");

                    b.Property<int>("pd_ReducePrice")
                        .HasColumnType("int");

                    b.Property<string>("pd_ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pd_WaitForConfirmation")
                        .HasColumnType("bit");

                    b.HasKey("pd_Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            pd_Id = "7bd35169-7da8-493d-8805-515a90c9f2f2",
                            pd_Description = "BanhCanhCua",
                            pd_Img1 = "/images/item250x300/BanhCanhCua.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "BanhCanhCua",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "34b6e3d3-5635-40d2-aeab-d35cedf016dc",
                            pd_Description = "BanhMi",
                            pd_Img1 = "/images/item250x300/BanhMi.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "BanhMi",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "2091a9bc-4f13-46ac-a812-f96173012570",
                            pd_Description = "banhtrangtron",
                            pd_Img1 = "/images/item250x300/banhtrangtron.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "banhtrangtron",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "ade31785-fb10-41ba-9540-0221d10337eb",
                            pd_Description = "banhuotlongdalat",
                            pd_Img1 = "/images/item250x300/banhuotlongdalat.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "banhuotlongdalat",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "ca93b4cf-9a5c-4c13-b51e-bdc0ae5f0526",
                            pd_Description = "BoKho",
                            pd_Img1 = "/images/item250x300/BoKho.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "BoKho",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "6a2abbe8-3fdc-4e92-a1ac-3583728918fa",
                            pd_Description = "bunbo",
                            pd_Img1 = "/images/item250x300/bunbo.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "bunbo",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "d20d07ed-8e49-4397-b032-26e6b959346d",
                            pd_Description = "bundaumamtom",
                            pd_Img1 = "/images/item250x300/bundaumamtom.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "bundaumamtom",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "d271e72e-13f0-4e2d-a397-892cb9649ae1",
                            pd_Description = "Bunxaochay",
                            pd_Img1 = "/images/item250x300/Bunxaochay.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Bunxaochay",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "b21d4d3b-780f-4c08-9b5b-3cf17d6845b5",
                            pd_Description = "cocosummer",
                            pd_Img1 = "/images/item250x300/cocosummer.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "cocosummer",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "ae7475c9-fa72-41c5-b27d-4618638569f0",
                            pd_Description = "comboxao",
                            pd_Img1 = "/images/item250x300/comboxao.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "comboxao",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "e954fa0b-9eda-4d5f-9fc1-20e5161c24ff",
                            pd_Description = "comga",
                            pd_Img1 = "/images/item250x300/comga.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "comga",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "b73e6ab0-7d29-4c24-8603-51605df3b053",
                            pd_Description = "comgadenhat",
                            pd_Img1 = "/images/item250x300/comgadenhat.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "comgadenhat",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "f0249f97-1914-4a12-b7b2-e9a7efbb156b",
                            pd_Description = "denhatthitnuong",
                            pd_Img1 = "/images/item250x300/denhatthitnuong.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "denhatthitnuong",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "143281af-7bef-4d81-8ffa-2a245e87cd22",
                            pd_Description = "goicuon",
                            pd_Img1 = "/images/item250x300/goicuon.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "goicuon",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "ca0f6236-5996-431f-b38a-15efd980a764",
                            pd_Description = "kfc",
                            pd_Img1 = "/images/item250x300/kfc.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "kfc",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "9eb30e41-88bc-40f2-bb23-8056f3f70e72",
                            pd_Description = "KimBap",
                            pd_Img1 = "/images/item250x300/KimBap.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "KimBap",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "75c5c97c-9c01-4ac2-9f1b-f27a9968af0f",
                            pd_Description = "loteria",
                            pd_Img1 = "/images/item250x300/loteria.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "loteria",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "57597fdc-4bd4-4f4a-aa3c-7c7cb4f98e01",
                            pd_Description = "mitronanvat",
                            pd_Img1 = "/images/item250x300/mitronanvat.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "mitronanvat",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "ef69578b-1d22-417c-8bc1-5d44d832518d",
                            pd_Description = "monngontrangbang",
                            pd_Img1 = "/images/item250x300/monngontrangbang.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "monngontrangbang",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "75ff36e6-7cae-428b-b872-987063c7ad1c",
                            pd_Description = "ParisBaguete",
                            pd_Img1 = "/images/item250x300/ParisBaguete.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "ParisBaguete",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "73eb8502-ffc9-42cb-994f-5809a0ed0213",
                            pd_Description = "pizza",
                            pd_Img1 = "/images/item250x300/pizza.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "pizza",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "04806b82-b6db-42ec-9cff-3c4caf5ab9a1",
                            pd_Description = "quanngontrangbang",
                            pd_Img1 = "/images/item250x300/quanngontrangbang.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "quanngontrangbang",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "c5e00e3c-75d7-48c1-834b-250cf443113a",
                            pd_Description = "RauMaMix",
                            pd_Img1 = "/images/item250x300/RauMaMix.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "RauMaMix",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "e1d65d5d-e346-430a-b2a3-b28a0bdc5e63",
                            pd_Description = "Royaltea",
                            pd_Img1 = "/images/item250x300/Royaltea.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Royaltea",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "21e8fe2a-6f1f-4f39-89af-a9eacb6766eb",
                            pd_Description = "Sanfulou",
                            pd_Img1 = "/images/item250x300/Sanfulou.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Sanfulou",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "07d38aa3-2005-4b50-b3c9-780db20a69c3",
                            pd_Description = "stacbuk-cf",
                            pd_Img1 = "/images/item250x300/stacbuk-cf.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "stacbuk-cf",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "0397efec-0265-4043-ae8f-ef8b81d575ee",
                            pd_Description = "trasuanhalam",
                            pd_Img1 = "/images/item250x300/trasuanhalam.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "trasuanhalam",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        },
                        new
                        {
                            pd_Id = "a0826282-e4e1-43a7-8c45-25464180a101",
                            pd_Description = "Xoixeoba3beo",
                            pd_Img1 = "/images/item250x300/Xoixeoba3beo.png",
                            pd_Img2 = "",
                            pd_Img3 = "",
                            pd_Img4 = "",
                            pd_Name = "Xoixeoba3beo",
                            pd_NameImg1 = "1",
                            pd_NameImg2 = "2",
                            pd_NameImg3 = "3",
                            pd_NameImg4 = "4",
                            pd_Price = 1,
                            pd_Rate = 5,
                            pd_ReducePrice = 0,
                            pd_ShortDescription = "Short Description",
                            pd_WaitForConfirmation = false
                        });
                });

            modelBuilder.Entity("Food.Entity.ProductsInCategories", b =>
                {
                    b.Property<string>("pic_productId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pic_CategoriesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("pic_productId", "pic_CategoriesId");

                    b.HasIndex("pic_CategoriesId");

                    b.ToTable("ProductsInCategories");

                    b.HasData(
                        new
                        {
                            pic_productId = "d20d07ed-8e49-4397-b032-26e6b959346d",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "d271e72e-13f0-4e2d-a397-892cb9649ae1",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "ae7475c9-fa72-41c5-b27d-4618638569f0",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "e954fa0b-9eda-4d5f-9fc1-20e5161c24ff",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "b73e6ab0-7d29-4c24-8603-51605df3b053",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "f0249f97-1914-4a12-b7b2-e9a7efbb156b",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "143281af-7bef-4d81-8ffa-2a245e87cd22",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "9eb30e41-88bc-40f2-bb23-8056f3f70e72",
                            pic_CategoriesId = "8c1b99bf-2734-449f-bc94-0fc2337dae74"
                        },
                        new
                        {
                            pic_productId = "7bd35169-7da8-493d-8805-515a90c9f2f2",
                            pic_CategoriesId = "1a083464-aede-43ac-a40c-ea3386677a60"
                        },
                        new
                        {
                            pic_productId = "ade31785-fb10-41ba-9540-0221d10337eb",
                            pic_CategoriesId = "1a083464-aede-43ac-a40c-ea3386677a60"
                        },
                        new
                        {
                            pic_productId = "ca93b4cf-9a5c-4c13-b51e-bdc0ae5f0526",
                            pic_CategoriesId = "1a083464-aede-43ac-a40c-ea3386677a60"
                        },
                        new
                        {
                            pic_productId = "6a2abbe8-3fdc-4e92-a1ac-3583728918fa",
                            pic_CategoriesId = "1a083464-aede-43ac-a40c-ea3386677a60"
                        },
                        new
                        {
                            pic_productId = "ef69578b-1d22-417c-8bc1-5d44d832518d",
                            pic_CategoriesId = "1a083464-aede-43ac-a40c-ea3386677a60"
                        },
                        new
                        {
                            pic_productId = "c5e00e3c-75d7-48c1-834b-250cf443113a",
                            pic_CategoriesId = "5ca2c387-ea0e-404e-8563-a633d3f04c59"
                        },
                        new
                        {
                            pic_productId = "e1d65d5d-e346-430a-b2a3-b28a0bdc5e63",
                            pic_CategoriesId = "5ca2c387-ea0e-404e-8563-a633d3f04c59"
                        },
                        new
                        {
                            pic_productId = "07d38aa3-2005-4b50-b3c9-780db20a69c3",
                            pic_CategoriesId = "5ca2c387-ea0e-404e-8563-a633d3f04c59"
                        },
                        new
                        {
                            pic_productId = "0397efec-0265-4043-ae8f-ef8b81d575ee",
                            pic_CategoriesId = "5ca2c387-ea0e-404e-8563-a633d3f04c59"
                        },
                        new
                        {
                            pic_productId = "34b6e3d3-5635-40d2-aeab-d35cedf016dc",
                            pic_CategoriesId = "7b7851ec-8969-4cfe-9740-68eb0cb8fb79"
                        },
                        new
                        {
                            pic_productId = "57597fdc-4bd4-4f4a-aa3c-7c7cb4f98e01",
                            pic_CategoriesId = "7b7851ec-8969-4cfe-9740-68eb0cb8fb79"
                        },
                        new
                        {
                            pic_productId = "2091a9bc-4f13-46ac-a812-f96173012570",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "b21d4d3b-780f-4c08-9b5b-3cf17d6845b5",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "ca0f6236-5996-431f-b38a-15efd980a764",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "75c5c97c-9c01-4ac2-9f1b-f27a9968af0f",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "75ff36e6-7cae-428b-b872-987063c7ad1c",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "73eb8502-ffc9-42cb-994f-5809a0ed0213",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "04806b82-b6db-42ec-9cff-3c4caf5ab9a1",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "21e8fe2a-6f1f-4f39-89af-a9eacb6766eb",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        },
                        new
                        {
                            pic_productId = "a0826282-e4e1-43a7-8c45-25464180a101",
                            pic_CategoriesId = "193f1d0d-d521-4ee5-a06a-0ac22e26e391"
                        });
                });

            modelBuilder.Entity("Food.Entity.ReviewInproduct", b =>
                {
                    b.Property<string>("rip_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("rip_ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("rip_ProductId", "rip_ReviewId");

                    b.HasIndex("rip_ReviewId");

                    b.ToTable("ReviewInproduct");

                    b.HasData(
                        new
                        {
                            rip_ProductId = "7bd35169-7da8-493d-8805-515a90c9f2f2",
                            rip_ReviewId = "EEBA6608-AB75-4E83-909F-604B1A06F16C"
                        },
                        new
                        {
                            rip_ProductId = "7bd35169-7da8-493d-8805-515a90c9f2f2",
                            rip_ReviewId = "9EED8607-D2BB-45EE-AEE3-C59D858A7F97"
                        },
                        new
                        {
                            rip_ProductId = "7bd35169-7da8-493d-8805-515a90c9f2f2",
                            rip_ReviewId = "C2A543C2-B1E2-4DC5-A131-9137E4673FA6"
                        });
                });

            modelBuilder.Entity("Food.Entity.Reviews", b =>
                {
                    b.Property<string>("review_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("review_Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("review_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("review_ReviewType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("review_UploadTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("review_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("review_id");

                    b.HasIndex("review_UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            review_id = "EEBA6608-AB75-4E83-909F-604B1A06F16C",
                            review_Comment = "Good1",
                            review_HideStatus = false,
                            review_ReviewType = "Review",
                            review_UploadTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            review_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        },
                        new
                        {
                            review_id = "9EED8607-D2BB-45EE-AEE3-C59D858A7F97",
                            review_Comment = "Good2",
                            review_HideStatus = false,
                            review_ReviewType = "Review",
                            review_UploadTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            review_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff"
                        },
                        new
                        {
                            review_id = "C2A543C2-B1E2-4DC5-A131-9137E4673FA6",
                            review_Comment = "Good3",
                            review_HideStatus = false,
                            review_ReviewType = "Review",
                            review_UploadTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            review_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222"
                        });
                });

            modelBuilder.Entity("Food.Entity.Shipping", b =>
                {
                    b.Property<string>("ship_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ship_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ship_Price")
                        .HasColumnType("int");

                    b.HasKey("ship_Id");

                    b.ToTable("Shipping");

                    b.HasData(
                        new
                        {
                            ship_Id = "7CF94A7D-9239-446E-A404-086518F84652",
                            ship_Name = "Ship",
                            ship_Price = 5
                        });
                });

            modelBuilder.Entity("Food.Entity.SubReview", b =>
                {
                    b.Property<string>("subReview_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("subReview_Commnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("subReview_DateCommnet")
                        .HasColumnType("datetime2");

                    b.Property<bool>("subReview_HideStatus")
                        .HasColumnType("bit");

                    b.Property<string>("subReview_UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("subreview_SubReviewType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subReview_Id");

                    b.HasIndex("subReview_UserId");

                    b.ToTable("SubReview");

                    b.HasData(
                        new
                        {
                            subReview_Id = "d4a36d07-28db-40a2-9f9d-63a50f6534af",
                            subReview_Commnet = "subreview 1",
                            subReview_DateCommnet = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            subReview_HideStatus = false,
                            subReview_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            subreview_SubReviewType = "SubReview"
                        },
                        new
                        {
                            subReview_Id = "9ab08daa-49af-49ab-a3cc-0466d4c6c0ee",
                            subReview_Commnet = "subreview 3",
                            subReview_DateCommnet = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            subReview_HideStatus = false,
                            subReview_UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            subreview_SubReviewType = "SubReview"
                        },
                        new
                        {
                            subReview_Id = "3e8a2eb7-4529-44e3-998a-693c6bc235db",
                            subReview_Commnet = "subreview 3",
                            subReview_DateCommnet = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            subReview_HideStatus = false,
                            subReview_UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            subreview_SubReviewType = "SubReview"
                        });
                });

            modelBuilder.Entity("Food.Entity.SubReviewInReview", b =>
                {
                    b.Property<string>("SRiR_ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SRiR_SubReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SRiR_ReviewId", "SRiR_SubReviewId");

                    b.HasIndex("SRiR_SubReviewId");

                    b.ToTable("SubReviewInReview");

                    b.HasData(
                        new
                        {
                            SRiR_ReviewId = "EEBA6608-AB75-4E83-909F-604B1A06F16C",
                            SRiR_SubReviewId = "d4a36d07-28db-40a2-9f9d-63a50f6534af"
                        },
                        new
                        {
                            SRiR_ReviewId = "EEBA6608-AB75-4E83-909F-604B1A06F16C",
                            SRiR_SubReviewId = "9ab08daa-49af-49ab-a3cc-0466d4c6c0ee"
                        },
                        new
                        {
                            SRiR_ReviewId = "9EED8607-D2BB-45EE-AEE3-C59D858A7F97",
                            SRiR_SubReviewId = "3e8a2eb7-4529-44e3-998a-693c6bc235db"
                        });
                });

            modelBuilder.Entity("Food.Entity.SubscribeEmail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscribeEmail");
                });

            modelBuilder.Entity("Food.Models.UserInRoleModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserInRoleModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            RoleId = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd"
                        },
                        new
                        {
                            UserId = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            RoleId = "360E601E-92F2-4F08-832B-604A21293258"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Food.Entity.AppRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Roles");

                    b.HasDiscriminator().HasValue("AppRole");

                    b.HasData(
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb4fd",
                            ConcurrencyStamp = "7b891ac0-ab72-4c2d-82f5-5674a61f3acb",
                            Name = "Staff",
                            NormalizedName = "staff",
                            Description = "Staff"
                        },
                        new
                        {
                            Id = "360E601E-92F2-4F08-832B-604A21293258",
                            ConcurrencyStamp = "80721165-9900-49fc-a119-e89a3ec4bd6c",
                            Name = "Admin",
                            NormalizedName = "admin",
                            Description = "Admin"
                        });
                });

            modelBuilder.Entity("Food.Entity.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_State")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("AppUser");

                    b.HasData(
                        new
                        {
                            Id = "DE544998-A3CC-4E12-ABB4-0642E57BD222",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d23ed443-67e3-4ae2-92b7-bfa5f37527e1",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKJ+QEMNg+xw1k06Rdz5zYMMsr19THWbabddT5++/We6rfqPCftIsXNmWScj+3BEVQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e95bfe03-b633-4fcb-a0d9-dde26b7d557e",
                            TwoFactorEnabled = false,
                            UserName = "Admin",
                            DoB = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "admin",
                            LastName = "admin"
                        },
                        new
                        {
                            Id = "f49e4348-718f-43e3-b1f6-6dc89c5Bb5ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a1d31be-f920-4f7e-924e-dfc8f14d09ea",
                            Email = "staff@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "STAFF@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEC4RAhHbjSTN+sZd0abVUoQD3yVKuwI+y4OsOEePZFb9s+02SeI7O/YZlEbnjqUtpA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "46898373-6eac-41c3-b8fe-6d292d9436a9",
                            TwoFactorEnabled = false,
                            UserName = "Staff",
                            DoB = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "staff",
                            LastName = "staff"
                        });
                });

            modelBuilder.Entity("Food.Entity.Bills", b =>
                {
                    b.HasOne("Food.Entity.AppUser", "AppUserB")
                        .WithMany("BillsAU")
                        .HasForeignKey("bill_UserId");

                    b.Navigation("AppUserB");
                });

            modelBuilder.Entity("Food.Entity.Cart", b =>
                {
                    b.HasOne("Food.Entity.AppUser", "AppUserC")
                        .WithMany("CartU")
                        .HasForeignKey("cart_UserID");

                    b.Navigation("AppUserC");
                });

            modelBuilder.Entity("Food.Entity.CartsDevice", b =>
                {
                    b.HasOne("Food.Entity.Device", "DeviceCD")
                        .WithMany("CartsDeviceD")
                        .HasForeignKey("cartd_DeviceId");

                    b.Navigation("DeviceCD");
                });

            modelBuilder.Entity("Food.Entity.ProductInCart", b =>
                {
                    b.HasOne("Food.Entity.Cart", "CartPICart")
                        .WithMany("ProductInCartC")
                        .HasForeignKey("pic_CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Entity.Products", "ProductsPICart")
                        .WithMany("ProductInCartP")
                        .HasForeignKey("pic_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartPICart");

                    b.Navigation("ProductsPICart");
                });

            modelBuilder.Entity("Food.Entity.ProductInCartDevices", b =>
                {
                    b.HasOne("Food.Entity.CartsDevice", "CartsDevicePICD")
                        .WithMany("ProductInCartDevicesCD")
                        .HasForeignKey("picd_CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Entity.Products", "ProductsPICD")
                        .WithMany("ProductInCartDevicesP")
                        .HasForeignKey("picd_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartsDevicePICD");

                    b.Navigation("ProductsPICD");
                });

            modelBuilder.Entity("Food.Entity.ProductsInCategories", b =>
                {
                    b.HasOne("Food.Entity.Categories", "CategoriesPIC")
                        .WithMany("ProductsInCategoriesC")
                        .HasForeignKey("pic_CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Entity.Products", "ProductsPIC")
                        .WithMany("ProductsInCategoriesP")
                        .HasForeignKey("pic_productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriesPIC");

                    b.Navigation("ProductsPIC");
                });

            modelBuilder.Entity("Food.Entity.ReviewInproduct", b =>
                {
                    b.HasOne("Food.Entity.Products", "ProductsRIP")
                        .WithMany("ReviewInproductP")
                        .HasForeignKey("rip_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Entity.Reviews", "ReviewsRIP")
                        .WithMany("ReviewInproductR")
                        .HasForeignKey("rip_ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsRIP");

                    b.Navigation("ReviewsRIP");
                });

            modelBuilder.Entity("Food.Entity.Reviews", b =>
                {
                    b.HasOne("Food.Entity.AppUser", "AppUserR")
                        .WithMany("ReviewsU")
                        .HasForeignKey("review_UserId");

                    b.Navigation("AppUserR");
                });

            modelBuilder.Entity("Food.Entity.SubReview", b =>
                {
                    b.HasOne("Food.Entity.AppUser", "AppUserSR")
                        .WithMany("SubReviewSR")
                        .HasForeignKey("subReview_UserId");

                    b.Navigation("AppUserSR");
                });

            modelBuilder.Entity("Food.Entity.SubReviewInReview", b =>
                {
                    b.HasOne("Food.Entity.Reviews", "Reviews")
                        .WithMany("SubReviewInReview")
                        .HasForeignKey("SRiR_ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food.Entity.SubReview", "SubReview")
                        .WithMany("SubReviewInReview")
                        .HasForeignKey("SRiR_SubReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reviews");

                    b.Navigation("SubReview");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Food.Entity.Cart", b =>
                {
                    b.Navigation("ProductInCartC");
                });

            modelBuilder.Entity("Food.Entity.CartsDevice", b =>
                {
                    b.Navigation("ProductInCartDevicesCD");
                });

            modelBuilder.Entity("Food.Entity.Categories", b =>
                {
                    b.Navigation("ProductsInCategoriesC");
                });

            modelBuilder.Entity("Food.Entity.Device", b =>
                {
                    b.Navigation("CartsDeviceD");
                });

            modelBuilder.Entity("Food.Entity.Products", b =>
                {
                    b.Navigation("ProductInCartDevicesP");

                    b.Navigation("ProductInCartP");

                    b.Navigation("ProductsInCategoriesP");

                    b.Navigation("ReviewInproductP");
                });

            modelBuilder.Entity("Food.Entity.Reviews", b =>
                {
                    b.Navigation("ReviewInproductR");

                    b.Navigation("SubReviewInReview");
                });

            modelBuilder.Entity("Food.Entity.SubReview", b =>
                {
                    b.Navigation("SubReviewInReview");
                });

            modelBuilder.Entity("Food.Entity.AppUser", b =>
                {
                    b.Navigation("BillsAU");

                    b.Navigation("CartU");

                    b.Navigation("ReviewsU");

                    b.Navigation("SubReviewSR");
                });
#pragma warning restore 612, 618
        }
    }
}
